# Encoding: UTF-8
# File: annotation.py
# Creation: Sunday February 7th 2021
# Supervisor: Daphn√© Lercier (dlercier)
# Author: Arthur Dujardin (arthurdjn)
# ------
# Copyright (c) 2021, Makina Corpus


# Basic imports
from abc import ABC
from datetime import datetime


# TODO: Add function to check if the arguments are in the correct format (list of dict)


class Annotation(ABC):

    def __init___(self, images, categories, annotations, info=None):
        super().__init__()
        self.images = images
        self.categories = categories
        self.annotations = annotations
        self.info = info or {
            "description": "Auto-generated by Geolabel-Maker",
            "date_created": datetime.now().strftime("%Y/%m/%d")
        }

    @classmethod
    def open(cls, filename):
        raise NotImplementedError

    @classmethod
    def build(cls, images=None, categories=None, labels=None, **kwargs):
        raise NotImplementedError

    def to_dict(self, **kwargs):
        return {}

    def save(self, filename, **kwargs):
        raise NotImplementedError

    def inner_repr(self):
        return f"images={len(self.images)}, categories={len(self.categories)}, annotations={len(self.annotations)}"

    def __repr__(self):
        return f"{self.__class__.__name__}({self.inner_repr()})"
